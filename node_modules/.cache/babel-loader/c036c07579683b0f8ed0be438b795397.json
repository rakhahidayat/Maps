{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teguhhardiansah/Mission/map/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport { Map, Marker, GoogleApiWrapper, Polygon, InfoWindow } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\n\nclass App extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      markers: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      triangleCoords: [],\n      triangleCoordsTemp: []\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(t, map, coord) {\n    const {\n      latLng\n    } = coord;\n    const lat = latLng.lat();\n    const lng = latLng.lng();\n    this.setState(previousState => {\n      return {\n        markers: [...previousState.markers, {\n          title: \"Location\",\n          name: \"Location\",\n          position: {\n            lat,\n            lng\n          }\n        }],\n        triangleCoordsTemp: {\n          lat,\n          lng\n        }\n      };\n    });\n    let length = 1;\n    let temp = [];\n\n    for (let i = 0; i < length; i++) {\n      temp.push(this.state.triangleCoordsTemp.lat, this.state.triangleCoordsTemp.lng);\n    }\n\n    this.state.triangleCoords = temp;\n    alert(JSON.stringify(temp.length));\n  }\n\n  clearMark() {\n    this.setState({\n      markers: []\n    });\n  }\n\n  render() {\n    // const triangleCoords = [\n    //   {lat: -6.2710423, lng: 106.7962754},\n    //   {lat: -6.2715431, lng: 106.7951503},\n    //   {lat: -6.2720115, lng: 106.7971688},\n    //   {lat: -6.2653552, lng: 106.796917},\n    //   {lat: -6.2670616, lng: 106.7936876},\n    // ];\n    // var statusDiv = document.getElementById(\"Maps\");\n    // if (statusDiv.className == \"Maps\") {\n    //   statusDiv.className = \"Maps\";\n    // }\n    // else {\n    //     statusDiv.className = \"offair\";\n    // }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App flex-column\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 col-example text-right\",\n              children: \"Mission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 col-example text-left\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 col-example text-left\",\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 col-example text-left\",\n              children: \"End\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                this.clearMark();\n              },\n              className: \"p-2 text-right\",\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Maps\",\n            children: /*#__PURE__*/_jsxDEV(Map, {\n              google: this.props.google,\n              initialCenter: {\n                lat: -6.2710423,\n                lng: 106.7962754\n              },\n              style: {\n                width: '70%',\n                height: '100%',\n                position: 'relative',\n                marginTop: '-20%'\n              },\n              className: 'map',\n              zoom: 16,\n              onClick: this.onClick,\n              children: [/*#__PURE__*/_jsxDEV(Polygon, {\n                paths: this.state.triangleCoords,\n                strokeColor: \"#0000FF\",\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: \"#0000FF\",\n                fillOpacity: 0.35\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n                marker: this.state.activeMarker,\n                visible: this.state.showingInfoWindow,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"TitleWindow\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"TEST\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), this.state.markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n                onClick: this.onMarkerClick,\n                title: marker.title,\n                name: marker.name,\n                position: marker.position\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI'\n})(App);","map":{"version":3,"sources":["/Users/teguhhardiansah/Mission/map/src/App.js"],"names":["Map","Marker","GoogleApiWrapper","Polygon","InfoWindow","React","Component","Row","Col","Button","App","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","markers","triangleCoords","triangleCoordsTemp","onClick","bind","t","map","coord","latLng","lat","lng","previousState","title","name","position","length","temp","i","push","alert","JSON","stringify","clearMark","render","google","width","height","marginTop","index","apiKey"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport { Map, Marker, GoogleApiWrapper, Polygon, InfoWindow } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      triangleCoords: [],\n      triangleCoordsTemp: []\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n \n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  onClick(t, map, coord) {\n    const { latLng } = coord;\n    const lat = latLng.lat();\n    const lng = latLng.lng();\n\n    this.setState(previousState => {\n      return {\n        markers: [\n          ...previousState.markers,\n          {\n            title: \"Location\",\n            name: \"Location\",\n            position: { lat, lng }\n          }\n        ],\n        triangleCoordsTemp: {\n          lat, lng\n        }\n      };\n    });\n    let length = 1\n    let temp = [];\n    for( let i = 0; i < length; i++){\n      temp.push(this.state.triangleCoordsTemp.lat, this.state.triangleCoordsTemp.lng)\n    }\n    this.state.triangleCoords = temp;\n    alert(JSON.stringify(temp.length))\n  }\n\n  clearMark(){\n    this.setState({\n      markers: []\n    })\n  }\n\n  render() {\n    // const triangleCoords = [\n    //   {lat: -6.2710423, lng: 106.7962754},\n    //   {lat: -6.2715431, lng: 106.7951503},\n    //   {lat: -6.2720115, lng: 106.7971688},\n    //   {lat: -6.2653552, lng: 106.796917},\n    //   {lat: -6.2670616, lng: 106.7936876},\n    // ];\n    // var statusDiv = document.getElementById(\"Maps\");\n    // if (statusDiv.className == \"Maps\") {\n    //   statusDiv.className = \"Maps\";\n    // }\n    // else {\n    //     statusDiv.className = \"offair\";\n    // }\n    return (\n      <div className=\"App flex-column\">\n        <Col md=\"12\">\n        <Row className=\"mb-3\">\n          <div className=\"d-flex flex-column\">\n            <div className=\"p-2 col-example text-right\">Mission</div>\n            <div className=\"p-2 col-example text-left\">Add</div>\n            <div className=\"p-2 col-example text-left\">Start</div>\n            <div className=\"p-2 col-example text-left\">End</div>\n            <div onClick={() => { this.clearMark() }} className=\"p-2 text-right\">Clear</div>\n          </div>\n          </Row>\n          <Row className=\"mt-1\">\n            <div className=\"Maps\">\n              <Map google={this.props.google}\n                  initialCenter={{lat: -6.2710423,lng: 106.7962754}}\n                style={{width: '70%', height: '100%', position: 'relative', marginTop: '-20%'}}\n                className={'map'}\n                zoom={16}\n                onClick={this.onClick}>\n                <Polygon\n                  paths={this.state.triangleCoords}\n                  strokeColor=\"#0000FF\"\n                  strokeOpacity={0.8}\n                  strokeWeight={2}\n                  fillColor=\"#0000FF\"\n                  fillOpacity={0.35} />\n                {/* <Marker\n                  onClick={this.onMarkerClick}\n                  title={'Vehicle 1a'}\n                  name={'Start1'}\n                  position={{ lat: -6.2715431, lng: 106.7951503 }} /> */}\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}>\n                    <div className=\"TitleWindow\">\n                      <h1>TEST</h1>\n                    </div>\n                </InfoWindow>\n                {/* <Marker\n                  onClick={this.onMarkerClick}\n                  title={'Vehicle 1'}\n                  name={'Target1'}\n                  position={{ lat: -6.2720115, lng: 106.7971688 }} /> */}\n                \n                {this.state.markers.map((marker, index) => (\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    key={index}\n                    title={marker.title}\n                    name={marker.name}\n                    position={marker.position}\n                  />\n                ))}\n              </Map>\n            </div>\n          </Row>\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI')\n})(App)\n"]},"metadata":{},"sourceType":"module"}