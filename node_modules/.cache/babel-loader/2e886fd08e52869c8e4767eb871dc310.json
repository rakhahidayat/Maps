{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teguhhardiansah/Mission/map/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css'; // import GoogleMapReact from 'google-map-react';\n\nimport React, { PropTypes, Component } from 'react'; // import React, {PropTypes, Component} from 'react-addons';\n\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport GoogleMap from 'google-map-react';\nimport MyGreatPlaceWithHover from './hover';\nimport { K_SIZE } from './ksize.style'; // const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.shouldComponentUpdate = shouldPureComponentUpdate;\n  } //   render(){\n  //   return (\n  //     <div className=\"App\">\n  //       <div style={{ height: '100vh', width: '70%' }}>\n  //         <GoogleMapReact\n  //           bootstrapURLKeys={{ key: 'AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI' }}\n  //           defaultCenter={{lat: -6.2715431,lng: 106.7951503}}\n  //           defaultZoom={11}\n  //         >\n  //           <AnyReactComponent\n  //             lat={-6.2715431}\n  //             lng={106.7951503}\n  //             text=\"GoWork\"\n  //             image={logo}\n  //           />\n  //         </GoogleMapReact>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      apiKey: 'AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI' // set if you need stats etc ...\n      ,\n      center: this.props.center,\n      zoom: this.props.zoom // instead of css hover (which sometimes is bad for map markers) (bad means inability to hover on markers placed under other markers)\n      // you can use internal GoogleMap component hover algorithm\n      // hover algorithm explained at x_distance_hover example\n      ,\n      hoverDistance: K_SIZE / 2,\n      children: [/*#__PURE__*/_jsxDEV(MyGreatPlaceWithHover, {\n        lat: -6.2715431,\n        lng: 106.7951503,\n        text: 'A'\n        /* Kreyser Avrora */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyGreatPlaceWithHover, { ...this.props.greatPlaceCoords,\n        text: 'B'\n        /* road circle */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  center: PropTypes.array,\n  zoom: PropTypes.number,\n  greatPlaceCoords: PropTypes.any\n};\nApp.defaultProps = {\n  center: [-6.2715431, 106.7951503],\n  zoom: 11,\n  greatPlaceCoords: {\n    lat: -6.2720115,\n    lng: 106.7971688\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/teguhhardiansah/Mission/map/src/App.js"],"names":["React","PropTypes","Component","shouldPureComponentUpdate","GoogleMap","MyGreatPlaceWithHover","K_SIZE","App","constructor","props","shouldComponentUpdate","render","center","zoom","greatPlaceCoords","propTypes","array","number","any","defaultProps","lat","lng"],"mappings":";;AAAA;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,yBAAP,MAAsC,4BAAtC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,qBAAP,MAAkC,SAAlC;AAEA,SAAQC,MAAR,QAAqB,eAArB,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAgB1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,qBAEmB,GAFKP,yBAEL;AAElB,GAlByB,CAoB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAE,yCADV,CACqD;AADrD;AAEE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAFrB;AAGE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAHnB,CAIE;AACA;AACA;AANF;AAOE,MAAA,aAAa,EAAEP,MAAM,GAAG,CAP1B;AAAA,8BASE,QAAC,qBAAD;AAAuB,QAAA,GAAG,EAAE,CAAC,SAA7B;AAAwC,QAAA,GAAG,EAAE,WAA7C;AAA0D,QAAA,IAAI,EAAE;AAAK;;AAArE;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,qBAAD,OAA2B,KAAKG,KAAL,CAAWK,gBAAtC;AAAwD,QAAA,IAAI,EAAE;AAAK;;AAAnE;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAvDyB;;AAAtBP,G,CAEGQ,S,GAAY;AACjBH,EAAAA,MAAM,EAAEX,SAAS,CAACe,KADD;AAEjBH,EAAAA,IAAI,EAAEZ,SAAS,CAACgB,MAFC;AAGjBH,EAAAA,gBAAgB,EAAEb,SAAS,CAACiB;AAHX,C;AAFfX,G,CAQGY,Y,GAAe;AACpBP,EAAAA,MAAM,EAAE,CAAC,CAAC,SAAF,EAAa,WAAb,CADY;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,gBAAgB,EAAE;AAACM,IAAAA,GAAG,EAAE,CAAC,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB;AAHE,C;AAkDxB,eAAed,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\n// import GoogleMapReact from 'google-map-react';\nimport React, {PropTypes, Component} from 'react';\n// import React, {PropTypes, Component} from 'react-addons';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\n\nimport GoogleMap from 'google-map-react';\nimport MyGreatPlaceWithHover from './hover';\n\nimport {K_SIZE} from './ksize.style';\n\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass App extends Component {\n\n  static propTypes = {\n    center: PropTypes.array,\n    zoom: PropTypes.number,\n    greatPlaceCoords: PropTypes.any\n  };\n\n  static defaultProps = {\n    center: [-6.2715431, 106.7951503],\n    zoom: 11,\n    greatPlaceCoords: {lat: -6.2720115, lng: 106.7971688}\n  };\n\n  shouldComponentUpdate = shouldPureComponentUpdate;\n\n  constructor(props) {\n    super(props);\n  }\n\n//   render(){\n//   return (\n//     <div className=\"App\">\n//       <div style={{ height: '100vh', width: '70%' }}>\n//         <GoogleMapReact\n//           bootstrapURLKeys={{ key: 'AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI' }}\n//           defaultCenter={{lat: -6.2715431,lng: 106.7951503}}\n//           defaultZoom={11}\n//         >\n//           <AnyReactComponent\n//             lat={-6.2715431}\n//             lng={106.7951503}\n//             text=\"GoWork\"\n//             image={logo}\n//           />\n//         </GoogleMapReact>\n//       </div>\n//     </div>\n//   );\n// }\n  render() {\n    return (\n      <GoogleMap\n        apiKey={'AIzaSyBAefhRlXEH3vCko-zZTX6PHllTR6av4WI'} // set if you need stats etc ...\n        center={this.props.center}\n        zoom={this.props.zoom}\n        // instead of css hover (which sometimes is bad for map markers) (bad means inability to hover on markers placed under other markers)\n        // you can use internal GoogleMap component hover algorithm\n        // hover algorithm explained at x_distance_hover example\n        hoverDistance={K_SIZE / 2}\n        >\n        <MyGreatPlaceWithHover lat={-6.2715431} lng={106.7951503} text={'A'} /* Kreyser Avrora */ />\n        <MyGreatPlaceWithHover {...this.props.greatPlaceCoords} text={'B'} /* road circle */ />\n      </GoogleMap>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}